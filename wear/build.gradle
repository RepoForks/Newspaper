apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'jacoco'

jacoco {
    toolVersion '0.7.9'
}

String VERSION_REVISION = 'git rev-list --count HEAD'.execute().text.trim()
String VERSION_HASH     = 'git rev-parse --short HEAD'.execute().text.trim()

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.1'

    defaultConfig {
        applicationId    'com.github.ayltai.newspaper'
        minSdkVersion    21
        targetSdkVersion 26
        versionCode      1
        versionName      '3.0.' + VERSION_REVISION + '.' + VERSION_HASH

        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            storeFile     rootProject.file('key-store.jks')
            keyAlias      System.getenv('ANDROID_KEY_ALIAS')
            storePassword System.getenv('ANDROID_STORE_PASSWORD')
            keyPassword   System.getenv('ANDROID_KEY_PASSWORD')
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true

            ext.enableCrashlytics = false
        }

        release {
            minifyEnabled   true
            shrinkResources true
            signingConfig   signingConfigs.release
            proguardFiles   getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true

        unitTests.all {
            jacoco {
                includeNoLocationClasses true
            }
        }
    }

    lintOptions {
        abortOnError false
        disable     'RestrictedApi'
        disable     'MissingTranslation'
    }

    dexOptions {
        preDexLibraries false
        javaMaxHeapSize '1024m'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

checkstyle {
    configFile     rootProject.file('checkstyle.xml')
    showViolations true
}

ext {
    wearableVersion    = '2.0.5'
    firebaseVersion    = '11.4.2'
    robolectricVersion = '3.4.2'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Android Wear
    provided "com.google.android.wearable:wearable:$wearableVersion"
    compile  "com.google.android.support:wearable:$wearableVersion"
    compile  "com.google.android.gms:play-services-wearable:$firebaseVersion"

    // Unit testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.10.0'
    testCompile "org.robolectric:robolectric:$robolectricVersion"
}
